description = 'GAE selenium testing of test-app'

apply plugin: 'war'
apply plugin: 'appengine'

System.properties['appengine.sdk.root'] = System.properties['user.home'] + "/appengine-java-sdk-${gae_version}"

appengine {
    disableUpdateCheck = true
}

war {
    webXml = file('src/main/webapp/WEB-INF/web.xml')
    from "src/main/webapp"
}

//appengineRun.daemon = Boolean.parseBoolean(server_daemon)
//appengineRun.daemon = true

dependencies {
	compile libs.servlet_spec
	compile libs.guice
	compile libs.guice_servlet
	compile libs.inject
    functionalTestCompile project(path: ':blobstore-api', configuration: 'testCompile')
    functionalTestCompile project(path: ':blobstore-gae')
    functionalTestCompile libs.gae_testing
    functionalTestCompile libs.selenium
    functionalTestCompile libs.guiceberry
    functionalTestCompile libs.guava_testlib
    functionalTestCompile libs.junit
    functionalTestCompile libs.inject
    functionalTestCompile libs.guice
}

task unpackTest(dependsOn: ":blobstore-api:packageTests") << {
    def myTests = file("../blobstore-api/build/libs/blobstore-api-${version}-tests.jar")
    ant.unjar(dest: "$buildDir/classes/functionalTest", src: myTests)
}

appengineFunctionalTest.dependsOn unpackTest

appengineFunctionalTest {
	systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simpleblobstore.PlaceHolderGuiceBerryEnv'] =
						'com.googlecode.simpleblobstore.gae.GaeGuiceBerryEnv'
    testLogging.showStandardStreams = true
}

clean.dependsOn appengineStop
